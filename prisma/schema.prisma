generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id
  email         String    @unique
  name          String?
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  snippets      Snippet[]
  tags          Tag[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Snippet {
  id        String   @id @default(uuid())
  title     String
  content   String
  language  String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  tags      Tag[]    @relation("SnippetTags")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id       String    @id @default(uuid())
  name     String    @unique
  snippets Snippet[] @relation("SnippetTags")
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
}

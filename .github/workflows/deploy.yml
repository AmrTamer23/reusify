name: Deploy to Production

on:
  push:
    branches:
      - main # or your production branch
  workflow_dispatch: # allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy repository to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Create app directory on server
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ~/apps/reusify"

          # Copy application files to server
          scp -r ./* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/apps/reusify/
          scp -r ./.github ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/apps/reusify/

      - name: Create environment file
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
          TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
          TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}
        run: |
          # Create .env file with secrets
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cat > ~/apps/reusify/.env << EOL
          NODE_ENV=production
          BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL=${{ secrets.BETTER_AUTH_URL }}
          TURSO_DATABASE_URL=${{ secrets.TURSO_DATABASE_URL }}
          TURSO_AUTH_TOKEN=${{ secrets.TURSO_AUTH_TOKEN }}
          EOL"

      - name: Build and deploy on server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ~/apps/reusify && \
          # Check for NVM and install it if not present
          if [ ! -d ~/.nvm ]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            export NVM_DIR=\$HOME/.nvm
            [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh
          fi && \
          # Load NVM and install/use Node LTS
          export NVM_DIR=\$HOME/.nvm
          [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh
          nvm install --lts && \
          nvm use --lts && \
          # Install PM2 globally if not already installed
          npm install -g pm2 && \
          # Install dependencies and build
          npm install && \
          npm run build && \
          # Start or restart the application
          pm2 stop reusify || true && \
          pm2 start npm --name 'reusify' -- start && \
          pm2 save"

name: Deploy to Production

on:
  push:
    branches:
      - main # or your production branch
  workflow_dispatch: # allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup Next.js cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}-
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: pnpm install

      - name: Create .env file for build
        run: |
          cat > .env << EOL
          NODE_ENV=production
          BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL=${{ secrets.BETTER_AUTH_URL }}
          TURSO_DATABASE_URL=libsql://mock-db-for-build.turso.io
          TURSO_AUTH_TOKEN=mock-token-for-build
          NEXT_PUBLIC_SKIP_DB_INIT=true
          NEXT_SKIP_AUTH_CONFIG=true
          EOL

      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          TURSO_DATABASE_URL: libsql://mock-db-for-build.turso.io
          TURSO_AUTH_TOKEN: mock-token-for-build
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
          NEXT_PUBLIC_SKIP_DB_INIT: "true"
          NEXT_SKIP_AUTH_CONFIG: "true"

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Prepare server directory
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ~/apps/reusify"

      - name: Deploy application to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Create and transfer compressed archive
          tar -czf build.tar.gz package.json $([ -f "pnpm-lock.yaml" ] && echo "pnpm-lock.yaml") .next public next.config.js
          scp -o ConnectTimeout=30 build.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/apps/reusify/

          # Extract on server
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ~/apps/reusify && tar -xzf build.tar.gz && rm build.tar.gz"

      - name: Configure environment on server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
          TURSO_DATABASE_URL: ${{ secrets.TURSO_DATABASE_URL }}
          TURSO_AUTH_TOKEN: ${{ secrets.TURSO_AUTH_TOKEN }}
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cat > ~/apps/reusify/.env << EOL
          NODE_ENV=production
          BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
          BETTER_AUTH_URL=${{ secrets.BETTER_AUTH_URL }}
          TURSO_DATABASE_URL=${{ secrets.TURSO_DATABASE_URL }}
          TURSO_AUTH_TOKEN=${{ secrets.TURSO_AUTH_TOKEN }}
          EOL"

      - name: Start application
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd ~/apps/reusify && \
          # Setup Node environment
          if [ ! -d ~/.nvm ]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            export NVM_DIR=\$HOME/.nvm
            [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh
          fi && \
          export NVM_DIR=\$HOME/.nvm && \
          [ -s \$NVM_DIR/nvm.sh ] && \. \$NVM_DIR/nvm.sh && \
          nvm use --lts || nvm install --lts && \
          npm install -g pnpm pm2 && \
          pnpm install --prod && \
          pm2 delete reusify || true && \
          pm2 start pnpm --name 'reusify' -- start && \
          pm2 save"
